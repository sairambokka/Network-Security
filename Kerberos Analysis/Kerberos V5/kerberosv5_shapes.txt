(comment "CPSA 4.4.5")
(comment "Extracted shapes")

(herald "Kerberos Version 5 - with pre-authentication" (bound 20)
  (limit 16000))

(comment "CPSA 4.4.5")

(comment "All input read from kerberosv5.scm")

(comment "Step count limited to 16000")

(comment "Strand count bounded at 20")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (ticket_tgs mesg) (password kctgs skey) (n1 text)
    (ts1 ts2 l2 time) (tgs tktserver) (c name))
  (defstrand client 2 (ticket_tgs ticket_tgs) (kctgs kctgs)
    (password password) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (non-orig password)
  (uniq-orig n1)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs
          (enc kctgs tgs ts2 l2 n1 (hash password c))))))
  (label 0)
  (unrealized (0 1))
  (origs (n1 (0 0)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton kerberos
  (vars (ticket_tgs mesg) (adc data) (password kctgs keytgs skey)
    (n1 text) (ts1 ts2 l2 time) (tgs tktserver) (c name))
  (defstrand client 2 (ticket_tgs ticket_tgs) (kctgs kctgs)
    (password password) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (precedes ((0 0) (1 0)) ((1 1) (0 1)))
  (non-orig password keytgs)
  (uniq-orig n1)
  (uniq-gen kctgs)
  (operation encryption-test (displaced 2 0 client 1)
    (enc ts1-0 (hash password c)) (1 0))
  (strand-map 0 1)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c))))))
  (label 3)
  (parent 0)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (c c) (tgs tgs) (kctgs kctgs)
        (ticket_tgs ticket_tgs) (ts1 ts1) (ts2 ts2) (l2 l2))))
  (origs (n1 (0 0)))
  (ugens (kctgs (1 1))))

(defskeleton kerberos
  (vars (ticket_tgs mesg) (adc data) (password kctgs keytgs skey)
    (n1 n1-0 text) (ts1 ts2 l2 ts1-0 time) (tgs tgs-0 tktserver)
    (c name))
  (defstrand client 2 (ticket_tgs ticket_tgs) (kctgs kctgs)
    (password password) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1-0) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1-0)
    (tgs tgs-0) (c c))
  (precedes ((0 0) (1 0)) ((1 1) (0 1)) ((2 0) (1 0)))
  (non-orig password keytgs)
  (uniq-orig n1)
  (uniq-gen kctgs)
  (operation encryption-test (added-strand client 1)
    (enc ts1-0 (hash password c)) (1 0))
  (strand-map 0 1)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((recv (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1-0 n1-0 (enc ts1-0 (hash password c))))))
  (label 4)
  (parent 0)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (c c) (tgs tgs) (kctgs kctgs)
        (ticket_tgs ticket_tgs) (ts1 ts1) (ts2 ts2) (l2 l2))))
  (origs (n1 (0 0)))
  (ugens (kctgs (1 1))))

(comment "Nothing left to do")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (v server) (password kctgs kcv skey)
    (n1 n2 text) (ts1 ts2 ts3 ts4 l2 l4 time) (tgs tktserver) (c name))
  (defstrand client 4 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2) (l4 l4) (tgs tgs)
    (c c))
  (non-orig password)
  (uniq-orig n1 n2)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))))
  (label 6)
  (unrealized (0 1))
  (origs (n1 (0 0)) (n2 (0 2)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (password kctgs kcv keytgs keyv skey) (n1 n2 text)
    (ts1 ts2 ts3 ts4 l2 l4 time) (tgs tktserver) (c name))
  (defstrand client 4 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2) (l4 l4) (tgs tgs)
    (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (precedes ((0 0) (1 0)) ((0 2) (2 0)) ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig password keytgs keyv)
  (uniq-orig n1 n2)
  (uniq-gen kctgs kcv)
  (operation nonce-test
    (contracted (tgs-0 tgs) (keytgs-0 keytgs) (ts2-0 ts2) (l2-0 l2)
      (adc-0 adc)) kctgs (2 0)
    (enc kctgs tgs ts2 l2 n1 (hash password c))
    (enc kctgs c adc tgs ts2 l2 keytgs))
  (strand-map 0 1 2)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs)))))
  (label 28)
  (parent 6)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (n2 n2) (c c) (tgs tgs) (v v)
        (kctgs kctgs) (kcv kcv) (ticket_tgs ticket_tgs)
        (ticket_v ticket_v) (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4)
        (l2 l2) (l4 l4))))
  (origs (n1 (0 0)) (n2 (0 2)))
  (ugens (kcv (2 1)) (kctgs (1 1))))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (password kctgs kcv keytgs keyv skey) (n1 n2 n1-0 text)
    (ts1 ts2 ts3 ts4 l2 l4 ts1-0 time) (tgs tgs-0 tktserver) (c name))
  (defstrand client 4 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2) (l4 l4) (tgs tgs)
    (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1-0) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1-0)
    (tgs tgs-0) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (precedes ((0 0) (1 0)) ((0 2) (3 0)) ((1 1) (0 1)) ((2 0) (1 0))
    ((3 1) (0 3)))
  (non-orig password keytgs keyv)
  (uniq-orig n1 n2)
  (uniq-gen kctgs kcv)
  (operation nonce-test
    (contracted (tgs-1 tgs) (keytgs-0 keytgs) (ts2-0 ts2) (l2-0 l2)
      (adc-0 adc)) kctgs (3 0)
    (enc kctgs tgs ts2 l2 n1 (hash password c))
    (enc kctgs c adc tgs ts2 l2 keytgs))
  (strand-map 0 1 2 3)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1-0 n1-0 (enc ts1-0 (hash password c)))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs)))))
  (label 33)
  (parent 6)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (n2 n2) (c c) (tgs tgs) (v v)
        (kctgs kctgs) (kcv kcv) (ticket_tgs ticket_tgs)
        (ticket_v ticket_v) (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4)
        (l2 l2) (l4 l4))))
  (origs (n1 (0 0)) (n2 (0 2)))
  (ugens (kcv (3 1)) (kctgs (1 1))))

(comment "Nothing left to do")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (v server) (password kctgs kcv skey)
    (n1 n2 text) (ts1 ts2 ts3 ts4 ts5 l2 l4 time) (tgs tktserver)
    (c name))
  (defstrand client 6 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (ts5 ts5) (l2 l2) (l4 l4)
    (tgs tgs) (c c))
  (non-orig password)
  (uniq-orig n1 n2)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (label 51)
  (unrealized (0 1))
  (origs (n1 (0 0)) (n2 (0 2)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (password kctgs kcv keytgs keyv skey) (n1 n2 text)
    (ts1 ts2 ts3 ts4 ts5 l2 l4 time) (tgs tktserver) (c name))
  (defstrand client 6 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (ts5 ts5) (l2 l2) (l4 l4)
    (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand server 2 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (precedes ((0 0) (1 0)) ((0 2) (2 0)) ((0 4) (3 0)) ((1 1) (0 1))
    ((2 1) (0 3)) ((3 1) (0 5)))
  (non-orig password keytgs keyv)
  (uniq-orig n1 n2)
  (uniq-gen kctgs kcv)
  (operation nonce-test
    (contracted (v-0 v) (keyv-0 keyv) (ts4-0 ts4) (l4-0 l4) (adc-0 adc))
    kcv (3 0) (enc kcv v ts4 l4 n2 kctgs) (enc kcv c adc v ts4 l4 keyv))
  (strand-map 0 1 2 3)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv)))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (label 110)
  (parent 51)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (n2 n2) (c c) (tgs tgs) (v v)
        (kctgs kctgs) (kcv kcv) (ticket_tgs ticket_tgs)
        (ticket_v ticket_v) (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4)
        (ts5 ts5) (l2 l2) (l4 l4))))
  (origs (n1 (0 0)) (n2 (0 2)))
  (ugens (kcv (2 1)) (kctgs (1 1))))

(defskeleton kerberos
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (password kctgs kcv keytgs keyv skey) (n1 n2 n1-0 text)
    (ts1 ts2 ts3 ts4 ts5 l2 l4 ts1-0 time) (tgs tgs-0 tktserver)
    (c name))
  (defstrand client 6 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (ts5 ts5) (l2 l2) (l4 l4)
    (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1-0) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1-0)
    (tgs tgs-0) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand server 2 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (precedes ((0 0) (1 0)) ((0 2) (3 0)) ((0 4) (4 0)) ((1 1) (0 1))
    ((2 0) (1 0)) ((3 1) (0 3)) ((4 1) (0 5)))
  (non-orig password keytgs keyv)
  (uniq-orig n1 n2)
  (uniq-gen kctgs kcv)
  (operation nonce-test
    (contracted (v-0 v) (keyv-0 keyv) (ts4-0 ts4) (l4-0 l4) (adc-0 adc))
    kcv (4 0) (enc kcv v ts4 l4 n2 kctgs) (enc kcv c adc v ts4 l4 keyv))
  (strand-map 0 1 2 3 4)
  (traces
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv)))
    ((recv (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1-0 n1-0 (enc ts1-0 (hash password c)))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (label 118)
  (parent 51)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (n1 n1) (n2 n2) (c c) (tgs tgs) (v v)
        (kctgs kctgs) (kcv kcv) (ticket_tgs ticket_tgs)
        (ticket_v ticket_v) (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4)
        (ts5 ts5) (l2 l2) (l4 l4))))
  (origs (n1 (0 0)) (n2 (0 2)))
  (ugens (kcv (3 1)) (kctgs (1 1))))

(comment "Nothing left to do")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (adc data) (password keytgs kctgs skey) (n1 text)
    (ts1 ts2 l2 time) (tgs tktserver) (c name))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (non-orig password keytgs)
  (uniq-gen kctgs)
  (traces
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c))))))
  (label 145)
  (unrealized (0 0))
  (origs)
  (ugens (kctgs (0 1)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton kerberos
  (vars (adc data) (password keytgs kctgs skey) (n1 n1-0 text)
    (ts1 ts2 l2 time) (tgs tgs-0 tktserver) (c name))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1)
    (tgs tgs-0) (c c))
  (precedes ((1 0) (0 0)))
  (non-orig password keytgs)
  (uniq-gen kctgs)
  (operation encryption-test (added-strand client 1)
    (enc ts1 (hash password c)) (0 0))
  (strand-map 0)
  (traces
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1 n1-0 (enc ts1 (hash password c))))))
  (label 146)
  (parent 145)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (keytgs keytgs) (c c) (tgs tgs) (n1 n1)
        (kctgs kctgs) (ts1 ts1) (ts2 ts2) (l2 l2) (adc adc))))
  (origs)
  (ugens (kctgs (0 1))))

(comment "Nothing left to do")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (adc data) (v server) (keytgs keyv kctgs kcv skey) (n2 text)
    (ts2 ts3 ts4 l2 l4 time) (tgs tktserver) (c name))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (non-orig keytgs keyv)
  (uniq-gen kcv)
  (traces
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs)))))
  (label 148)
  (unrealized (0 0))
  (origs)
  (ugens (kcv (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton kerberos
  (vars (adc data) (v server) (keytgs keyv kctgs kcv password skey)
    (n2 n1 text) (ts2 ts3 ts4 l2 l4 ts1 time) (tgs tktserver) (c name))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (precedes ((1 1) (0 0)))
  (non-orig keytgs keyv)
  (uniq-gen kctgs kcv)
  (operation encryption-test (added-strand authserver 2)
    (enc kctgs c adc tgs ts2 l2 keytgs) (0 0))
  (strand-map 0)
  (traces
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c))))))
  (label 149)
  (parent 148)
  (realized)
  (shape)
  (maps
    ((0)
      ((keytgs keytgs) (keyv keyv) (c c) (tgs tgs) (v v) (n2 n2)
        (kctgs kctgs) (kcv kcv) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2)
        (l4 l4) (adc adc))))
  (origs)
  (ugens (kctgs (1 1)) (kcv (0 1))))

(comment "Nothing left to do")

(defprotocol kerberos basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig keytgs)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keyv)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgoal hash-of-password-unavailable
    (forall ((password skey) (c name) (z z-0 strd))
      (implies
        (and (p "client" z 2) (p "" z-0 2)
          (p "client" "password" z password) (p "client" "c" z c)
          (p "" "x" z-0 (hash password c)) (non password)) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberos
  (vars (adc data) (v server) (keyv kcv skey) (ts4 ts5 l4 time)
    (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (non-orig keyv)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))))
  (label 150)
  (unrealized (0 0))
  (origs)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton kerberos
  (vars (adc data) (v server) (keyv kcv kctgs keytgs skey) (n2 text)
    (ts4 ts5 l4 ts2 ts3 l2 time) (tgs tktserver) (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (precedes ((1 1) (0 0)))
  (non-orig keyv)
  (uniq-gen kcv)
  (operation encryption-test (added-strand tgserver 2)
    (enc kcv c adc v ts4 l4 keyv) (0 0))
  (strand-map 0)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs)))))
  (label 151)
  (parent 150)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kcv (1 1))))

(comment "Nothing left to do")

(defprotocol kerberosS basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig password)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keytgs)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberosS
  (vars (adc data) (password keytgs kctgs skey) (n1 text)
    (ts1 ts2 l2 time) (tgs tktserver) (c name))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (non-orig password keytgs)
  (uniq-gen kctgs)
  (traces
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c))))))
  (label 152)
  (unrealized (0 0))
  (origs)
  (ugens (kctgs (0 1)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton kerberosS
  (vars (adc data) (password keytgs kctgs skey) (n1 n1-0 text)
    (ts1 ts2 l2 time) (tgs tgs-0 tktserver) (c name))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1)
    (tgs tgs-0) (c c))
  (precedes ((1 0) (0 0)))
  (non-orig password keytgs)
  (uniq-gen kctgs)
  (operation encryption-test (added-strand client 1)
    (enc ts1 (hash password c)) (0 0))
  (strand-map 0)
  (traces
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1 n1-0 (enc ts1 (hash password c))))))
  (label 153)
  (parent 152)
  (realized)
  (shape)
  (maps
    ((0)
      ((password password) (keytgs keytgs) (c c) (tgs tgs) (n1 n1)
        (kctgs kctgs) (ts1 ts1) (ts2 ts2) (l2 l2) (adc adc))))
  (origs)
  (ugens (kctgs (0 1))))

(comment "Nothing left to do")

(defprotocol kerberosS basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig password)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keytgs)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberosS
  (vars (adc data) (v server) (keytgs keyv kctgs kcv skey) (n2 text)
    (ts2 ts3 ts4 l2 l4 time) (tgs tktserver) (c name))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (non-orig keytgs keyv)
  (uniq-gen kcv)
  (traces
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs)))))
  (label 155)
  (unrealized (0 0))
  (origs)
  (ugens (kcv (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton kerberosS
  (vars (ticket_tgs mesg) (adc data) (v v-0 server)
    (keytgs keyv kctgs kcv password skey) (n2 n1 n2-0 text)
    (ts2 ts3 ts4 l2 l4 ts1 time) (tgs tktserver) (c name))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 3 (ticket_tgs ticket_tgs) (v v-0) (kctgs kctgs)
    (password password) (n1 n1) (n2 n2-0) (ts1 ts1) (ts2 ts2) (ts3 ts3)
    (l2 l2) (tgs tgs) (c c))
  (precedes ((1 1) (2 1)) ((2 0) (1 0)) ((2 2) (0 0)))
  (non-orig keytgs keyv password)
  (uniq-gen kctgs kcv)
  (operation encryption-test (displaced 3 1 authserver 2)
    (enc kctgs tgs-0 ts2-0 l2-0 n1-0 (hash password c)) (2 1))
  (strand-map 0 1 2)
  (traces
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v-0 ts3 n2-0 ticket_tgs (enc c ts3 kctgs)))))
  (label 168)
  (parent 155)
  (realized)
  (shape)
  (maps
    ((0)
      ((keytgs keytgs) (keyv keyv) (c c) (tgs tgs) (v v) (n2 n2)
        (kctgs kctgs) (kcv kcv) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2)
        (l4 l4) (adc adc))))
  (origs)
  (ugens (kctgs (1 1)) (kcv (0 1))))

(defskeleton kerberosS
  (vars (ticket_tgs mesg) (adc data) (v v-0 server)
    (keytgs keyv kctgs kcv password skey) (n2 n1 n1-0 n2-0 text)
    (ts2 ts3 ts4 l2 l4 ts1 ts1-0 time) (tgs tgs-0 tktserver) (c name))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1)
    (tgs tgs-0) (c c))
  (defstrand client 3 (ticket_tgs ticket_tgs) (v v-0) (kctgs kctgs)
    (password password) (n1 n1) (n2 n2-0) (ts1 ts1-0) (ts2 ts2)
    (ts3 ts3) (l2 l2) (tgs tgs) (c c))
  (precedes ((1 1) (3 1)) ((2 0) (1 0)) ((3 2) (0 0)))
  (non-orig keytgs keyv password)
  (uniq-gen kctgs kcv)
  (operation nonce-test
    (contracted (tgs-1 tgs) (password-0 password) (ts2-0 ts2) (l2-0 l2)
      (n1-1 n1)) kctgs (3 1) (enc kctgs tgs ts2 l2 n1 (hash password c))
    (enc kctgs c adc tgs ts2 l2 keytgs))
  (strand-map 0 1 2 3)
  (traces
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1 n1-0 (enc ts1 (hash password c)))))
    ((send (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v-0 ts3 n2-0 ticket_tgs (enc c ts3 kctgs)))))
  (label 170)
  (parent 155)
  (realized)
  (shape)
  (maps
    ((0)
      ((keytgs keytgs) (keyv keyv) (c c) (tgs tgs) (v v) (n2 n2)
        (kctgs kctgs) (kcv kcv) (ts2 ts2) (ts3 ts3) (ts4 ts4) (l2 l2)
        (l4 l4) (adc adc))))
  (origs)
  (ugens (kctgs (1 1)) (kcv (0 1))))

(comment "Nothing left to do")

(defprotocol kerberosS basic
  (defrole client
    (vars (c name) (tgs tktserver) (v server) (kctgs kcv password skey)
      (ticket_tgs ticket_v mesg) (ts1 ts2 ts3 ts4 ts5 l2 l4 time)
      (n1 n2 text))
    (trace (send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv))) (recv (enc ts5 kcv))))
  (defrole authserver
    (vars (c name) (tgs tktserver) (n1 text)
      (password kctgs keytgs skey) (ts1 ts2 l2 time) (adc data))
    (trace (recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    (non-orig password)
    (uniq-gen kctgs))
  (defrole tgserver
    (vars (c name) (tgs tktserver) (v server) (n2 text)
      (kctgs kcv keytgs keyv skey) (ts2 ts3 ts4 l2 l4 time) (adc data))
    (trace
      (recv
        (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    (non-orig keytgs)
    (uniq-gen kcv))
  (defrole server
    (vars (c name) (v server) (kcv keyv skey) (ts4 ts5 l4 time)
      (adc data))
    (trace (recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))
      (send (enc ts5 kcv))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (lang (authserver atom) (tktserver atom) (server atom) (time atom)))

(defskeleton kerberosS
  (vars (adc data) (v server) (keyv kcv skey) (ts4 ts5 l4 time)
    (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (non-orig keyv)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv)))))
  (label 180)
  (unrealized (0 0))
  (origs)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton kerberosS
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (keyv kcv keytgs kctgs password skey) (n2 n1 text)
    (ts4 ts5 l4 ts1 ts2 ts3 l2 time) (tgs tktserver) (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 5 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1) (ts2 ts2) (ts3 ts3) (ts4 ts4) (ts5 ts5) (l2 l2) (l4 l4)
    (tgs tgs) (c c))
  (precedes ((1 1) (3 3)) ((2 1) (3 1)) ((3 0) (2 0)) ((3 2) (1 0))
    ((3 4) (0 0)))
  (non-orig keyv keytgs password)
  (uniq-gen kcv kctgs)
  (operation encryption-test (displaced 4 1 tgserver 2)
    (enc kcv v-0 ts4-0 l4-0 n2-0 kctgs) (3 3))
  (strand-map 0 1 2 3)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv)))))
  (label 218)
  (parent 180)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kcv (1 1)) (kctgs (2 1))))

(defskeleton kerberosS
  (vars (ticket_tgs ticket_v mesg) (adc data) (v server)
    (keyv kcv keytgs kctgs password skey) (n2 n1 n1-0 text)
    (ts4 ts5 l4 ts1 ts1-0 ts2 ts3 l2 time) (tgs tgs-0 tktserver)
    (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs-0) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1-0) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs-0)
    (c c))
  (defstrand client 1 (password password) (n1 n1) (ts1 ts1) (tgs tgs)
    (c c))
  (defstrand client 5 (ticket_tgs ticket_tgs) (ticket_v ticket_v) (v v)
    (kctgs kctgs) (kcv kcv) (password password) (n1 n1-0) (n2 n2)
    (ts1 ts1-0) (ts2 ts2) (ts3 ts3) (ts4 ts4) (ts5 ts5) (l2 l2) (l4 l4)
    (tgs tgs-0) (c c))
  (precedes ((1 1) (4 3)) ((2 1) (4 1)) ((3 0) (2 0)) ((4 2) (1 0))
    ((4 4) (0 0)))
  (non-orig keyv keytgs password)
  (uniq-gen kcv kctgs)
  (operation encryption-test (displaced 5 1 tgserver 2)
    (enc kcv v-0 ts4-0 l4-0 n2-0 kctgs) (4 3))
  (strand-map 0 1 2 3 4)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs-0 ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs-0 ts1 n1-0 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs-0 ts2 l2 keytgs)
          (enc kctgs tgs-0 ts2 l2 n1-0 (hash password c)))))
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c)))))
    ((send (cat c tgs-0 ts1-0 n1-0 (enc ts1-0 (hash password c))))
      (recv
        (cat c ticket_tgs
          (enc kctgs tgs-0 ts2 l2 n1-0 (hash password c))))
      (send (cat v ts3 n2 ticket_tgs (enc c ts3 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv)))))
  (label 224)
  (parent 180)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kcv (1 1)) (kctgs (2 1))))

(defskeleton kerberosS
  (vars (ticket_tgs ticket_tgs-0 ticket_v mesg) (adc data)
    (v v-0 server) (keyv kcv kctgs keytgs password skey)
    (n2 n1 n2-0 text) (ts4 ts5 l4 ts2 ts3 l2 ts1 ts1-0 ts3-0 time)
    (tgs tktserver) (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 3 (ticket_tgs ticket_tgs) (v v-0) (kctgs kctgs)
    (password password) (n1 n1) (n2 n2-0) (ts1 ts1) (ts2 ts2) (ts3 ts3)
    (l2 l2) (tgs tgs) (c c))
  (defstrand client 5 (ticket_tgs ticket_tgs-0) (ticket_v ticket_v)
    (v v) (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1-0) (ts2 ts2) (ts3 ts3-0) (ts4 ts4) (ts5 ts5) (l2 l2)
    (l4 l4) (tgs tgs) (c c))
  (precedes ((1 1) (4 3)) ((2 1) (3 1)) ((2 1) (4 1)) ((3 0) (2 0))
    ((3 2) (1 0)) ((4 4) (0 0)))
  (non-orig keyv keytgs password)
  (uniq-gen kcv kctgs)
  (operation nonce-test
    (contracted (tgs-0 tgs) (password-0 password) (ts2-0 ts2) (l2-0 l2)
      (n1-0 n1)) kctgs (4 1) (enc kctgs tgs ts2 l2 n1 (hash password c))
    (enc kctgs c adc tgs ts2 l2 keytgs))
  (strand-map 0 1 2 3 4)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v-0 ts3 n2-0 ticket_tgs (enc c ts3 kctgs))))
    ((send (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (recv
        (cat c ticket_tgs-0
          (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3-0 n2 ticket_tgs-0 (enc c ts3-0 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv)))))
  (label 232)
  (parent 180)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kctgs (2 1)) (kcv (1 1))))

(defskeleton kerberosS
  (vars (ticket_tgs ticket_tgs-0 ticket_v mesg) (adc data)
    (v v-0 server) (keyv kcv kctgs keytgs password skey)
    (n2 n1 n1-0 n2-0 text)
    (ts4 ts5 l4 ts2 ts3 l2 ts1 ts1-0 ts1-1 ts3-0 time)
    (tgs tgs-0 tktserver) (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1) (ts2 ts2) (l2 l2) (tgs tgs) (c c))
  (defstrand client 1 (password password) (n1 n1-0) (ts1 ts1)
    (tgs tgs-0) (c c))
  (defstrand client 3 (ticket_tgs ticket_tgs) (v v-0) (kctgs kctgs)
    (password password) (n1 n1) (n2 n2-0) (ts1 ts1-0) (ts2 ts2)
    (ts3 ts3) (l2 l2) (tgs tgs) (c c))
  (defstrand client 5 (ticket_tgs ticket_tgs-0) (ticket_v ticket_v)
    (v v) (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1-1) (ts2 ts2) (ts3 ts3-0) (ts4 ts4) (ts5 ts5) (l2 l2)
    (l4 l4) (tgs tgs) (c c))
  (precedes ((1 1) (5 3)) ((2 1) (4 1)) ((2 1) (5 1)) ((3 0) (2 0))
    ((4 2) (1 0)) ((5 4) (0 0)))
  (non-orig keyv keytgs password)
  (uniq-gen kcv kctgs)
  (operation nonce-test
    (contracted (tgs-1 tgs) (password-0 password) (ts2-0 ts2) (l2-0 l2)
      (n1-1 n1)) kctgs (5 1) (enc kctgs tgs ts2 l2 n1 (hash password c))
    (enc kctgs c adc tgs ts2 l2 keytgs))
  (strand-map 0 1 2 3 4 5)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs-0 ts1 n1-0 (enc ts1 (hash password c)))))
    ((send (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v-0 ts3 n2-0 ticket_tgs (enc c ts3 kctgs))))
    ((send (cat c tgs ts1-1 n1 (enc ts1-1 (hash password c))))
      (recv
        (cat c ticket_tgs-0
          (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3-0 n2 ticket_tgs-0 (enc c ts3-0 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv)))))
  (label 238)
  (parent 180)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kctgs (2 1)) (kcv (1 1))))

(defskeleton kerberosS
  (vars (ticket_tgs ticket_tgs-0 ticket_v mesg) (adc data)
    (v v-0 server) (keyv kcv kctgs keytgs password skey)
    (n2 n1 n2-0 text) (ts4 ts5 l4 ts2 ts3 l2 ts1 ts1-0 ts3-0 time)
    (tgs tktserver) (c name))
  (defstrand server 1 (adc adc) (v v) (kcv kcv) (keyv keyv) (ts4 ts4)
    (ts5 ts5) (l4 l4) (c c))
  (defstrand tgserver 2 (adc adc) (v v) (kctgs kctgs) (kcv kcv)
    (keytgs keytgs) (keyv keyv) (n2 n2) (ts2 ts2) (ts3 ts3) (ts4 ts4)
    (l2 l2) (l4 l4) (tgs tgs) (c c))
  (defstrand authserver 2 (adc adc) (password password) (kctgs kctgs)
    (keytgs keytgs) (n1 n1) (ts1 ts1-0) (ts2 ts2) (l2 l2) (tgs tgs)
    (c c))
  (defstrand client 3 (ticket_tgs ticket_tgs) (v v-0) (kctgs kctgs)
    (password password) (n1 n1) (n2 n2-0) (ts1 ts1) (ts2 ts2) (ts3 ts3)
    (l2 l2) (tgs tgs) (c c))
  (defstrand client 5 (ticket_tgs ticket_tgs-0) (ticket_v ticket_v)
    (v v) (kctgs kctgs) (kcv kcv) (password password) (n1 n1) (n2 n2)
    (ts1 ts1-0) (ts2 ts2) (ts3 ts3-0) (ts4 ts4) (ts5 ts5) (l2 l2)
    (l4 l4) (tgs tgs) (c c))
  (precedes ((1 1) (4 3)) ((2 1) (3 1)) ((2 1) (4 1)) ((3 2) (1 0))
    ((4 0) (2 0)) ((4 4) (0 0)))
  (non-orig keyv keytgs password)
  (uniq-gen kcv kctgs)
  (operation encryption-test (displaced 5 1 tgserver 2)
    (enc kcv v-1 ts4-0 l4-0 n2-1 kctgs) (4 3))
  (strand-map 0 1 2 3 4)
  (traces ((recv (cat (enc kcv c adc v ts4 l4 keyv) (enc c ts5 kcv))))
    ((recv
       (cat v ts3 n2 (enc kctgs c adc tgs ts2 l2 keytgs)
         (enc c ts3 kctgs)))
      (send
        (cat c (enc kcv c adc v ts4 l4 keyv)
          (enc kcv v ts4 l4 n2 kctgs))))
    ((recv (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (send
        (cat c (enc kctgs c adc tgs ts2 l2 keytgs)
          (enc kctgs tgs ts2 l2 n1 (hash password c)))))
    ((send (cat c tgs ts1 n1 (enc ts1 (hash password c))))
      (recv
        (cat c ticket_tgs (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v-0 ts3 n2-0 ticket_tgs (enc c ts3 kctgs))))
    ((send (cat c tgs ts1-0 n1 (enc ts1-0 (hash password c))))
      (recv
        (cat c ticket_tgs-0
          (enc kctgs tgs ts2 l2 n1 (hash password c))))
      (send (cat v ts3-0 n2 ticket_tgs-0 (enc c ts3-0 kctgs)))
      (recv (cat c ticket_v (enc kcv v ts4 l4 n2 kctgs)))
      (send (cat ticket_v (enc c ts5 kcv)))))
  (label 242)
  (parent 180)
  (realized)
  (shape)
  (maps
    ((0)
      ((keyv keyv) (c c) (v v) (kcv kcv) (ts4 ts4) (ts5 ts5) (l4 l4)
        (adc adc))))
  (origs)
  (ugens (kcv (1 1)) (kctgs (2 1))))

(comment "Nothing left to do")
