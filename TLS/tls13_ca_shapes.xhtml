<?xml version="1.0"?>
<!-- CPSA 4.4.4 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
 <title>Cookie Authentication with TLS 1.3</title>
 <meta http-equiv="content-type" content="application/xhtml+xml; charset=UTF-8" />
 <style>
  svg.diagram { border-width: 1px; border-style: solid }
 </style>
</head>
<body>

<pre>(comment &quot;CPSA 4.4.4&quot;)
(comment &quot;Extracted shapes&quot;)
(herald &quot;Cookie Authentication with TLS 1.3&quot; (bound 12))
(comment &quot;CPSA 4.4.4&quot;)
(comment &quot;All input read from tls13_ca.scm&quot;)</pre>

<p id="top">Trees: <a href="#t0">0</a> <a href="#t63">63</a> <a href="#t296">296</a> <a href="#t367">367</a> <a href="#t369">369</a> <a href="#t372">372</a> <a href="#t533">533</a> <a href="#t596">596</a>.</p>

<p id="t0">Tree <a href="#top">0</a>, POV <a href="#k0">0</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k37&quot;, &quot;_self&quot;)'>37</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k0&quot;, &quot;_self&quot;)'>0</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k0">Item <a href="#t0">0</a>, Child: <a href="#k37">37</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 0</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (spk akey) (u s ca name)
    (pt pt-0 pval) (cookiestor locn) (x rndx) (y expt))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr)
  (uniq-gen x)
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))))
  (label 0)
  (unrealized (0 1))
  (origs (pt-0 (0 6)) (cr (0 0)))
  (ugens (x (0 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k37">Item <a href="#t0">37</a>, Parent: <a href="#k0">0</a>.</p>

<div>
 <svg
  class='diagram' width='179.880pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 179.880 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 139.920 714.960 Q 92.940 714.960 45.960 714.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-2 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-1 any-0))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <path
   d='M 139.920 414.960 Q 92.940 414.960 45.960 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='139.920' cy='264.960' r='6.000'/></g>
  <path
   d='M 139.920 189.960 Q 92.940 189.960 45.960 189.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <path
   d='M 39.960 639.960 Q 86.940 639.960 133.920 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <path
   d='M 39.960 339.960 Q 86.940 339.960 133.920 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <path
   d='M 39.960 264.960 Q 86.940 264.960 133.920 264.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='39.960' cy='189.960' r='6.000'/></g>
  <path
   d='M 39.960 114.960 Q 86.940 114.960 133.920 114.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any-0) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='89.940' y='39.960' style='text-anchor: middle;'>ca 37</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr random32) (spk akey)
    (u s ca name) (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn)
    (y x rndx))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (defstrand servera 9 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (authstor authstor) (y y) (x x))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 3) (1 3)) ((0 7) (1 7))
    ((1 1) (0 1)) ((1 4) (0 4)) ((1 8) (0 8)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr)
  (uniq-gen y x)
  (absent (y x))
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-5 trRl_clienta-at-6
    trRl_servera-at-5 trRl_servera-at-6)
  (operation encryption-test (displaced 2 0 clienta 8)
    (enc cookie request-0
      (hash &quot;c ap traffic&quot; cr sr
        (hash (exp (gen) (mul x-0 y)) &quot;derived&quot;))) (1 7))
  (strand-map 0 1)
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))))
  (label 37)
  (parent 0)
  (realized)
  (shape)
  (maps
    ((0)
      ((u u) (s s) (ca ca) (p p) (cr cr) (sr sr) (spk spk) (x x) (y y)
        (cookie cookie) (any any) (cookiestor cookiestor)
        (request request) (response response))))
  (origs (pt-0 (0 6)) (cookie (1 4)) (pt-2 (1 6)) (cr (0 0)) (sr (1 1)))
  (ugens (x (0 0)) (y (1 1))))</pre>

<p id="t63">Tree <a href="#top">63</a>, POV <a href="#k63">63</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k142&quot;, &quot;_self&quot;)'>142</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k63&quot;, &quot;_self&quot;)'>63</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k63">Item <a href="#t63">63</a>, Child: <a href="#k142">142</a>.</p>

<div>
 <svg
  class='diagram' width='179.880pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 179.880 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='189.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g><title>cookie</title><circle cx='139.920' cy='189.960' r='6.000'/>
   </g>
  <g><title>cookie</title>
   <circle style='fill: blue;' cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='89.940' y='39.960' style='text-anchor: middle;'>ca 63</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (spk akey) (u s ca name)
    (pt pt-0 pval) (cookiestor locn) (x rndx) (y expt))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (deflistener cookie)
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr)
  (uniq-gen x)
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    ((recv cookie) (send cookie)))
  (label 63)
  (unrealized (0 1))
  (origs (pt-0 (0 6)) (cr (0 0)))
  (ugens (x (0 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k142">Item <a href="#t63">142</a>, Parent: <a href="#k63">63</a>.</p>

<div>
 <svg
  class='diagram' width='379.800pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 379.800 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='339.840' y1='114.960' x2='339.840' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='239.880' y1='339.960' x2='239.880' y2='639.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='139.920' y1='639.960' x2='139.920' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 339.840 714.960 Q 192.900 677.460 45.960 714.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='339.840' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='339.840' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-2 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='339.840' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-1 any-0))</title>
   <circle style='fill: gray;' cx='339.840' cy='489.960' r='6.000'/></g>
  <path
   d='M 339.840 414.960 Q 192.900 377.460 45.960 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='339.840' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='339.840' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='339.840' cy='264.960' r='6.000'/></g>
  <path
   d='M 339.840 189.960 Q 192.900 152.460 45.960 189.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='339.840' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle style='fill: blue;' cx='339.840' cy='114.960' r='6.000'/></g>
  <path
   d='M 239.880 639.960 Q 192.900 639.960 145.920 639.960'
   style='stroke-dasharray: 6.000,2.400; stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request-0 (hash &quot;c ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='239.880' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='239.880' cy='564.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))</title>
   <circle cx='239.880' cy='489.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-0 (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)))</title>
   <circle style='fill: blue;' cx='239.880' cy='414.960' r='6.000'/></g>
  <g><title>(cat cr-0 (exp (gen) x))</title>
   <circle cx='239.880' cy='339.960' r='6.000'/></g>
  <g><title>cookie</title><circle cx='139.920' cy='714.960' r='6.000'/>
   </g>
  <g><title>cookie</title>
   <circle style='fill: blue;' cx='139.920' cy='639.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <path
   d='M 39.960 639.960 Q 186.900 602.460 333.840 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <path
   d='M 39.960 564.960 Q 136.920 527.460 233.880 564.960'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <path
   d='M 39.960 339.960 Q 186.900 302.460 333.840 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <path
   d='M 39.960 264.960 Q 186.900 227.460 333.840 264.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='39.960' cy='189.960' r='6.000'/></g>
  <path
   d='M 39.960 114.960 Q 186.900 77.460 333.840 114.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any-0) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0) (authstor authstor) (y y-0) (x x-0))</title>
   <text
    x='339.840' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((cookie cookie) (request request-0) (cr cr-0) (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='239.880' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor) (x x-0) (y y-0))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text
   x='189.900' y='39.960' style='text-anchor: middle;'>ca 142</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (spk spk-0 akey) (ca u s ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn) (x rndx) (y expt) (y-0 x-0 rndx))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk-0) (u u) (s s)
    (ca ca-0) (cookiestor cookiestor) (x x-0) (y y-0))
  (deflistener cookie)
  (defstrand clientr 5 (cookie cookie) (request request-0) (cr cr-0)
    (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor)
    (x x) (y y))
  (defstrand servera 9 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk-0) (u u) (s s)
    (ca ca-0) (authstor authstor) (y y-0) (x x-0))
  (precedes ((0 0) (3 0)) ((0 2) (3 2)) ((0 3) (3 3)) ((0 6) (2 3))
    ((0 7) (3 7)) ((2 4) (1 0)) ((3 1) (0 1)) ((3 4) (0 4))
    ((3 8) (0 8)))
  (non-orig (invk spk-0) (privk ca-0))
  (pen-non-orig p)
  (uniq-orig cookie cr sr)
  (uniq-gen x y-0 x-0)
  (absent (y-0 x-0))
  (gen-st (cat &quot;client store&quot; u s cookie))
  (facts (neq u s))
  (leads-to ((0 6) (2 3)))
  (rule fact-servera-neq0 trRl_clienta-at-5 trRl_clienta-at-6
    trRl_servera-at-5 trRl_servera-at-6)
  (operation encryption-test (displaced 4 0 clienta 8)
    (enc cookie request-1
      (hash &quot;c ap traffic&quot; cr sr
        (hash (exp (gen) (mul x-1 y-0)) &quot;derived&quot;))) (3 7))
  (strand-map 0 1 2 3)
  (traces
    ((send (cat cr (exp (gen) x-0)))
      (recv
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))))
    ((recv cookie) (send cookie))
    ((send (cat cr-0 (exp (gen) x)))
      (recv
        (cat (cat sr-0 (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))
            (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)))
      (load cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request-0
          (hash &quot;c ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    ((recv (cat cr (exp (gen) x-0)))
      (send
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))))
  (label 142)
  (parent 63)
  (realized)
  (shape)
  (maps
    ((0 1)
      ((u u) (s s) (ca ca-0) (p p) (cr cr) (sr sr) (spk spk-0)
        (cookie cookie) (x x-0) (y y-0) (any any)
        (cookiestor cookiestor) (request request) (response response))))
  (origs (pt-0 (0 6)) (cookie (3 4)) (pt-2 (3 6)) (cr (0 0)) (sr (3 1)))
  (ugens (x-0 (0 0)) (y-0 (3 1)) (x (2 0))))</pre>

<p id="t296">Tree <a href="#top">296</a>, POV <a href="#k296">296</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k334&quot;, &quot;_self&quot;)'>334</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k296&quot;, &quot;_self&quot;)'>296</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k296">Item <a href="#t296">296</a>, Child: <a href="#k334">334</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='529.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 529.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='489.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 296</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr random32) (spk akey) (s ca u name) (pt pval)
    (cookiestor locn) (x rndx) (y expt))
  (defstrand clientr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor) (x x) (y y))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr)
  (uniq-gen x)
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat pt &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))))
  (label 296)
  (unrealized (0 1))
  (origs (cr (0 0)))
  (ugens (x (0 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k334">Item <a href="#t296">334</a>, Parent: <a href="#k296">296</a>.</p>

<div>
 <svg
  class='diagram' width='379.800pt' height='829.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 379.800 829.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='339.840' y1='114.960' x2='339.840' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='239.880' y1='339.960' x2='239.880' y2='789.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='339.960' x2='39.960' y2='789.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 339.840 564.960 Q 291.524 637.464 243.207 709.967'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))</title>
   <circle style='fill: gray;' cx='339.840' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-2 any-0))</title>
   <circle style='fill: gray;' cx='339.840' cy='489.960' r='6.000'/></g>
  <path
   d='M 339.840 414.960 Q 242.880 377.460 145.920 414.960'
   style='stroke-dasharray: 6.000,2.400; stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr-1 sr-1 (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;)))</title>
   <circle cx='339.840' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u-0 p-0 (hash &quot;c ap traffic&quot; cr-1 sr-1 (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='339.840' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)))) (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1))</title>
   <circle style='fill: blue;' cx='339.840' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-1 (exp (gen) y-1)) (enc (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1))) (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)))</title>
   <circle cx='339.840' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr-1 (exp (gen) x-1))</title>
   <circle style='fill: blue;' cx='339.840' cy='114.960' r='6.000'/></g>
  <path
   d='M 239.880 789.960 Q 142.920 752.460 45.960 789.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='239.880' cy='789.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))</title>
   <circle style='fill: gray;' cx='239.880' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='239.880' cy='639.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='239.880' cy='564.960' r='6.000'/></g>
  <path
   d='M 239.880 414.960 Q 142.920 377.460 45.960 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='239.880' cy='414.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle style='fill: blue;' cx='239.880' cy='339.960' r='6.000'/></g>
  <path
   d='M 139.920 564.960 Q 92.940 564.960 45.960 564.960'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt-0 any))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))</title>
   <circle cx='139.920' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-0 (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)))</title>
   <circle style='fill: blue;' cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr-0 (exp (gen) x))</title>
   <circle cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='789.960' r='6.000'/></g>
  <path
   d='M 39.960 639.960 Q 136.920 602.460 233.880 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <path
   d='M 39.960 489.960 Q 137.111 488.906 234.262 562.853'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <path
   d='M 39.960 339.960 Q 136.920 302.460 233.880 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>((any any-0) (cookie cookie) (p p-0) (cr cr-1) (sr sr-1) (spk spk-1) (u u-0) (s s) (ca ca-1) (authstor authstor) (y y-1) (x x-1))</title>
   <text
    x='339.840' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk-0) (u u-0) (s s) (ca ca-0) (authstor authstor) (y y-0) (x x-0))</title>
   <text
    x='239.880' y='77.460' style='text-anchor: middle;'>serverr</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (p p) (cr cr-0) (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor) (x x-0) (y y-0))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <text
   x='189.900' y='39.960' style='text-anchor: middle;'>ca 334</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (spk spk-0 spk-1 akey)
    (u ca u-0 s ca-0 ca-1 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn) (x rndx) (y expt) (y-0 x-0 y-1 rndx)
    (x-1 expt))
  (defstrand clientr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor) (x x-0) (y y-0))
  (defstrand clienta 7 (any any) (cookie cookie) (p p) (cr cr-0)
    (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor)
    (x x) (y y))
  (defstrand serverr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk-0) (u u-0) (s s)
    (ca ca-0) (authstor authstor) (y y-0) (x x-0))
  (defstrand servera 7 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (spk spk-1) (u u-0) (s s) (ca ca-1) (authstor authstor)
    (y y-1) (x x-1))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 3)) ((1 6) (0 3))
    ((2 1) (0 1)) ((2 5) (0 5)) ((3 4) (1 4)) ((3 6) (2 4)))
  (non-orig (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr)
  (uniq-gen x y-0 x-0 y-1)
  (absent (y-0 x-0) (y-1 x-1))
  (gen-st (cat &quot;client store&quot; u s cookie)
    (cat &quot;server store&quot; s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 6) (0 3)) ((3 6) (2 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-5 trRl_clienta-at-6
    trRl_servera-at-5 trRl_servera-at-6)
  (operation channel-test (added-strand servera 7)
    (ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie)) (2 4))
  (strand-map 0 1 2)
  (traces
    ((send (cat cr (exp (gen) x-0)))
      (recv
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat pt &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))))
    ((send (cat cr-0 (exp (gen) x)))
      (recv
        (cat (cat sr-0 (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))
            (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt &quot;client store&quot; u s cookie)))
    ((recv (cat cr (exp (gen) x-0)))
      (send
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (load authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))))
    ((recv (cat cr-1 (exp (gen) x-1)))
      (send
        (cat (cat sr-1 (exp (gen) y-1))
          (enc (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
            (enc
              (hash (cat cr-1 (exp (gen) x-1))
                (cat sr-1 (exp (gen) y-1)) s spk-1
                (enc (hash s spk-1) (privk ca-1))) (invk spk-1))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1
                  sr-1)) (cat cr-1 (exp (gen) x-1))
              (cat sr-1 (exp (gen) y-1))
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc
                (hash (cat cr-1 (exp (gen) x-1))
                  (cat sr-1 (exp (gen) y-1)) s spk-1
                  (enc (hash s spk-1) (privk ca-1))) (invk spk-1)))
            (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1))
            (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1))
            (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
            (enc
              (hash (cat cr-1 (exp (gen) x-1))
                (cat sr-1 (exp (gen) y-1)) s spk-1
                (enc (hash s spk-1) (privk ca-1))) (invk spk-1))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1
                  sr-1)) (cat cr-1 (exp (gen) x-1))
              (cat sr-1 (exp (gen) y-1))
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc
                (hash (cat cr-1 (exp (gen) x-1))
                  (cat sr-1 (exp (gen) y-1)) s spk-1
                  (enc (hash s spk-1) (privk ca-1))) (invk spk-1))))
          (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1)))
      (recv
        (enc &quot;login&quot; u-0 p-0
          (hash &quot;c ap traffic&quot; cr-1 sr-1
            (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr-1 sr-1
            (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;))))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))))
  (label 334)
  (parent 296)
  (realized)
  (shape)
  (maps
    ((0)
      ((s s) (ca ca-0) (cr cr) (sr sr) (spk spk-0) (u u) (x x-0) (y y-0)
        (cookie cookie) (cookiestor cookiestor) (request request)
        (response response))))
  (origs (cookie (3 4)) (pt-1 (3 6)) (pt (1 6)) (cr (0 0)) (sr (2 1)))
  (ugens (y-1 (3 1)) (x-0 (0 0)) (y-0 (2 1)) (x (1 0))))</pre>

<p id="t367">Tree <a href="#top">367</a>, POV <a href="#k367">367</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k368&quot;, &quot;_self&quot;)'>368</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: grey;'
   onclick='window.open(&quot;#k367&quot;, &quot;_self&quot;)'>367</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k367">Item <a href="#t367">367</a>, Child: <a href="#k368">368</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='679.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 679.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='639.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-0 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 367</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (spk akey) (s ca u name) (pt pt-0 pval)
    (authstor locn) (y rndx) (x expt))
  (defstrand servera 8 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor)
    (y y) (x x))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cookie sr)
  (uniq-gen y)
  (absent (y x))
  (traces
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))))
  (label 367)
  (realized)
  (origs (pt-0 (0 6)) (sr (0 1)) (cookie (0 4)))
  (ugens (y (0 1)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k368">Item <a href="#t367">368</a>, Parent: <a href="#k367">367</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='679.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 679.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='639.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-0 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 368</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr random32) (spk akey) (s ca u name) (pt pt-0 pval)
    (authstor locn) (y rndx) (x expt))
  (defstrand servera 8 (any any) (cookie cookie) (request request) (p p)
    (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor)
    (y y) (x x))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cookie sr)
  (uniq-gen y)
  (absent (y x))
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_servera-at-5 trRl_servera-at-6)
  (traces
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt any))
      (stor authstor (cat pt-0 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))))
  (label 368)
  (parent 367)
  (realized)
  (shape)
  (maps
    ((0)
      ((s s) (ca ca) (cr cr) (sr sr) (spk spk) (cookie cookie) (u u)
        (y y) (x x) (p p) (any any) (authstor authstor)
        (request request))))
  (origs (pt-0 (0 6)) (sr (0 1)) (cookie (0 4)))
  (ugens (y (0 1))))</pre>

<p id="t369">Tree <a href="#top">369</a>, POV <a href="#k369">369</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k371&quot;, &quot;_self&quot;)'>371</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: grey;'
   onclick='window.open(&quot;#k369&quot;, &quot;_self&quot;)'>369</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k369">Item <a href="#t369">369</a>, Child: <a href="#k371">371</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='454.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 454.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='414.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(ch-msg authstor (cat pt &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((cookie cookie) (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>serverr</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 369</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (cookie data) (request httpreq) (cr sr random32) (spk akey)
    (s ca u name) (pt pval) (authstor locn) (y rndx) (x expt))
  (defstrand serverr 5 (cookie cookie) (request request) (cr cr) (sr sr)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))
  (non-orig (invk spk) (privk ca))
  (uniq-orig sr)
  (uniq-gen y)
  (absent (y x))
  (traces
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt &quot;server store&quot; s u cookie))))
  (label 369)
  (realized)
  (origs (sr (0 1)))
  (ugens (y (0 1)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k371">Item <a href="#t369">371</a>, Parent: <a href="#k369">369</a>.</p>

<div>
 <svg
  class='diagram' width='179.880pt' height='604.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 179.880 604.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='264.960' x2='39.960' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 139.920 564.960 Q 92.940 564.960 45.960 564.960'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg authstor (cat pt &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-0 any))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <path
   d='M 139.920 414.960 Q 92.340 450.660 44.759 486.359'
   style='stroke-dasharray: 6.000,2.400; stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr-0 sr-0))</title>
   <circle style='fill: blue;' cx='139.920' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-0 (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0 sr-0)))</title>
   <circle cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr-0 (exp (gen) x-0))</title>
   <circle style='fill: blue;' cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (p p) (cr cr-0) (sr sr-0) (spk spk-0) (u u) (s s) (ca ca-0) (authstor authstor) (y y-0) (x x-0))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((cookie cookie) (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>serverr</text>
   </g>
  <text x='89.940' y='39.960' style='text-anchor: middle;'>ca 371</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (request httpreq) (p password)
    (cr sr cr-0 sr-0 random32) (spk spk-0 akey) (s ca u ca-0 name)
    (pt pt-0 pval) (authstor locn) (y rndx) (x expt) (y-0 rndx)
    (x-0 expt))
  (defstrand serverr 5 (cookie cookie) (request request) (cr cr) (sr sr)
    (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))
  (defstrand servera 7 (any any) (cookie cookie) (p p) (cr cr-0)
    (sr sr-0) (spk spk-0) (u u) (s s) (ca ca-0) (authstor authstor)
    (y y-0) (x x-0))
  (precedes ((1 4) (0 3)) ((1 6) (0 4)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cookie sr)
  (uniq-gen y y-0)
  (absent (y x) (y-0 x-0))
  (gen-st (cat &quot;server store&quot; s u cookie))
  (facts (neq u s))
  (leads-to ((1 6) (0 4)))
  (rule fact-serverr-neq0 trRl_servera-at-5 trRl_servera-at-6)
  (operation channel-test (added-strand servera 7)
    (ch-msg authstor (cat pt &quot;server store&quot; s u cookie)) (0 4))
  (strand-map 0)
  (traces
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt &quot;server store&quot; s u cookie)))
    ((recv (cat cr-0 (exp (gen) x-0)))
      (send
        (cat (cat sr-0 (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr-0 (exp (gen) x-0))
                (cat sr-0 (exp (gen) y-0)) s spk-0
                (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0
                  sr-0)) (cat cr-0 (exp (gen) x-0))
              (cat sr-0 (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr-0 (exp (gen) x-0))
                  (cat sr-0 (exp (gen) y-0)) s spk-0
                  (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0 sr-0))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr-0 sr-0))
            (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr-0 (exp (gen) x-0))
                (cat sr-0 (exp (gen) y-0)) s spk-0
                (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr-0
                  sr-0)) (cat cr-0 (exp (gen) x-0))
              (cat sr-0 (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr-0 (exp (gen) x-0))
                  (cat sr-0 (exp (gen) y-0)) s spk-0
                  (enc (hash s spk-0) (privk ca-0))) (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr-0 sr-0)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (load authstor (cat pt-0 any))
      (stor authstor (cat pt &quot;server store&quot; s u cookie))))
  (label 371)
  (parent 369)
  (realized)
  (shape)
  (maps
    ((0)
      ((s s) (ca ca) (cr cr) (sr sr) (spk spk) (cookie cookie) (u u)
        (y y) (x x) (authstor authstor) (request request))))
  (origs (cookie (1 4)) (pt (1 6)) (sr (0 1)))
  (ugens (y-0 (1 1)) (y (0 1))))</pre>

<p id="t372">Tree <a href="#top">372</a>, POV <a href="#k372">372</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k431&quot;, &quot;_self&quot;)'>431</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k372&quot;, &quot;_self&quot;)'>372</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k372">Item <a href="#t372">372</a>, Child: <a href="#k431">431</a>.</p>

<div>
 <svg
  class='diagram' width='179.880pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 179.880 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='189.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='139.920' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='139.920' cy='114.960' r='6.000'/></g>
  <g><title>cookie</title><circle cx='39.960' cy='189.960' r='6.000'/>
   </g>
  <g><title>cookie</title>
   <circle style='fill: blue;' cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='89.940' y='39.960' style='text-anchor: middle;'>ca 372</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (spk akey) (u s ca name)
    (pt pt-0 pval) (cookiestor locn) (x rndx) (y expt))
  (deflistener cookie)
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cr sr)
  (uniq-gen x)
  (goals
    (forall
      ((any mesg) (cookie data) (response httpdata) (request httpreq)
        (p password) (cr sr random32) (spk akey) (x rndx) (u s ca name)
        (cookiestor locn) (z z-0 strd))
      (implies
        (and (p &quot;clienta&quot; z 9) (p &quot;&quot; z-0 2) (p &quot;clienta&quot; &quot;any&quot; z any)
          (p &quot;clienta&quot; &quot;cookie&quot; z cookie)
          (p &quot;clienta&quot; &quot;response&quot; z response) (p &quot;clienta&quot; &quot;spk&quot; z spk)
          (p &quot;clienta&quot; &quot;request&quot; z request) (p &quot;clienta&quot; &quot;p&quot; z p)
          (p &quot;clienta&quot; &quot;cr&quot; z cr) (p &quot;clienta&quot; &quot;sr&quot; z sr)
          (p &quot;clienta&quot; &quot;x&quot; z x) (p &quot;clienta&quot; &quot;u&quot; z u)
          (p &quot;clienta&quot; &quot;s&quot; z s) (p &quot;clienta&quot; &quot;ca&quot; z ca)
          (p &quot;clienta&quot; &quot;cookiestor&quot; z cookiestor) (p &quot;&quot; &quot;x&quot; z-0 cookie)
          (non (invk spk)) (non (privk ca)) (pnon p) (uniq sr)
          (uniq-at cr z 0) (ugen-at x z 0)) (false))))
  (traces ((recv cookie) (send cookie))
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))))
  (label 372)
  (unrealized (1 1))
  (origs (pt-0 (1 6)) (cr (1 0)))
  (ugens (x (1 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k431">Item <a href="#t372">431</a>, Parent: <a href="#k372">372</a>.</p>

<div>
 <svg
  class='diagram' width='379.800pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 379.800 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='339.840' y1='339.960' x2='339.840' y2='639.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='239.880' y1='114.960' x2='239.880' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='639.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 339.840 639.960 Q 192.900 602.460 45.960 639.960'
   style='stroke-dasharray: 6.000,2.400; stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request-0 (hash &quot;c ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x-0 y-0)) &quot;derived&quot;)))</title>
   <circle cx='339.840' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='339.840' cy='564.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x-0 y-0)) &quot;c hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul x-0 y-0)) &quot;c hs traffic&quot; cr-0 sr-0))</title>
   <circle cx='339.840' cy='489.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-0 (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0 sr-0)))</title>
   <circle style='fill: blue;' cx='339.840' cy='414.960' r='6.000'/></g>
  <g><title>(cat cr-0 (exp (gen) x-0))</title>
   <circle cx='339.840' cy='339.960' r='6.000'/></g>
  <path
   d='M 239.880 714.960 Q 192.900 714.960 145.920 714.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='239.880' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='239.880' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-2 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='239.880' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-1 any-0))</title>
   <circle style='fill: gray;' cx='239.880' cy='489.960' r='6.000'/></g>
  <path
   d='M 239.880 414.960 Q 192.900 414.960 145.920 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='239.880' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='239.880' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='239.880' cy='264.960' r='6.000'/></g>
  <path
   d='M 239.880 189.960 Q 192.900 189.960 145.920 189.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='239.880' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='239.880' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='714.960' r='6.000'/></g>
  <path
   d='M 139.920 639.960 Q 186.900 639.960 233.880 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='639.960' r='6.000'/></g>
  <path
   d='M 139.920 564.960 Q 236.880 527.460 333.840 564.960'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='414.960' r='6.000'/></g>
  <path
   d='M 139.920 339.960 Q 186.900 339.960 233.880 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='339.960' r='6.000'/></g>
  <path
   d='M 139.920 264.960 Q 186.900 264.960 233.880 264.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='139.920' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='139.920' cy='189.960' r='6.000'/></g>
  <path
   d='M 139.920 114.960 Q 186.900 114.960 233.880 114.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='139.920' cy='114.960' r='6.000'/></g>
  <g><title>cookie</title><circle cx='39.960' cy='714.960' r='6.000'/>
   </g>
  <g><title>cookie</title>
   <circle style='fill: blue;' cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>((cookie cookie) (request request-0) (cr cr-0) (sr sr-0) (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor) (x x-0) (y y-0))</title>
   <text
    x='339.840' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <g>
   <title>((any any-0) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='239.880' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text
   x='189.900' y='39.960' style='text-anchor: middle;'>ca 431</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request request-0 httpreq) (p password) (cr sr cr-0 sr-0 random32)
    (spk spk-0 akey) (u s ca ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn) (y x x-0 rndx) (y-0 expt))
  (deflistener cookie)
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (defstrand servera 9 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (authstor authstor) (y y) (x x))
  (defstrand clientr 5 (cookie cookie) (request request-0) (cr cr-0)
    (sr sr-0) (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor)
    (x x-0) (y y-0))
  (precedes ((1 0) (2 0)) ((1 2) (2 2)) ((1 3) (2 3)) ((1 6) (3 3))
    ((1 7) (2 7)) ((2 1) (1 1)) ((2 4) (1 4)) ((2 8) (1 8))
    ((3 4) (0 0)))
  (non-orig (invk spk) (privk ca))
  (pen-non-orig p)
  (uniq-orig cookie cr sr)
  (uniq-gen y x x-0)
  (absent (y x))
  (gen-st (cat &quot;client store&quot; u s cookie))
  (facts (neq u s))
  (leads-to ((1 6) (3 3)))
  (rule fact-servera-neq0 gen-st-clientr-0 trRl_clienta-at-5
    trRl_clienta-at-6 trRl_servera-at-5 trRl_servera-at-6)
  (operation nonce-test (added-strand clientr 5) cookie (0 0)
    (enc &quot;login-successful&quot; cookie
      (hash &quot;s ap traffic&quot; cr sr
        (hash (exp (gen) (mul y x)) &quot;derived&quot;)))
    (ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie)))
  (strand-map 0 1 2)
  (traces ((recv cookie) (send cookie))
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    ((send (cat cr-0 (exp (gen) x-0)))
      (recv
        (cat (cat sr-0 (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr-0 (exp (gen) x-0))
                (cat sr-0 (exp (gen) y-0)) s spk-0
                (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0
                  sr-0)) (cat cr-0 (exp (gen) x-0))
              (cat sr-0 (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr-0 (exp (gen) x-0))
                  (cat sr-0 (exp (gen) y-0)) s spk-0
                  (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))
            (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0 sr-0))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x-0 y-0)) &quot;c hs traffic&quot; cr-0 sr-0))
            (cat cr-0 (exp (gen) x-0)) (cat sr-0 (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr-0 (exp (gen) x-0))
                (cat sr-0 (exp (gen) y-0)) s spk-0
                (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x-0 y-0)) &quot;s hs traffic&quot; cr-0
                  sr-0)) (cat cr-0 (exp (gen) x-0))
              (cat sr-0 (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr-0 (exp (gen) x-0))
                  (cat sr-0 (exp (gen) y-0)) s spk-0
                  (enc (hash s spk-0) (privk ca-0))) (invk spk-0))))
          (hash (exp (gen) (mul x-0 y-0)) &quot;c hs traffic&quot; cr-0 sr-0)))
      (load cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request-0
          (hash &quot;c ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x-0 y-0)) &quot;derived&quot;))))))
  (label 431)
  (parent 372)
  (realized)
  (shape)
  (satisfies
    (no (fact false) (any any) (cookie cookie) (response response)
      (request request) (p p) (cr cr) (sr sr) (spk spk) (x x) (u u)
      (s s) (ca ca) (cookiestor cookiestor) (z 1) (z-0 0)))
  (maps
    ((0 1)
      ((any any) (cookie cookie) (response response) (request request)
        (p p) (cr cr) (sr sr) (spk spk) (x x) (u u) (s s) (ca ca)
        (cookiestor cookiestor) (y y))))
  (origs (pt-0 (1 6)) (cookie (2 4)) (pt-2 (2 6)) (sr (2 1)) (cr (1 0)))
  (ugens (x-0 (3 0)) (x (1 0)) (y (2 1))))</pre>

<p id="t533">Tree <a href="#top">533</a>, POV <a href="#k533">533</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k570&quot;, &quot;_self&quot;)'>570</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k533&quot;, &quot;_self&quot;)'>533</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k533">Item <a href="#t533">533</a>, Child: <a href="#k570">570</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 533</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any mesg) (cookie data) (response httpdata) (request httpreq)
    (p password) (cr sr random32) (spk akey) (u s ca name)
    (pt pt-0 pval) (cookiestor locn) (x rndx) (y expt))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr)
  (uniq-gen x)
  (goals
    (forall
      ((z strd) (cookie data) (u s ca name) (cr sr random32) (spk akey)
        (x rndx))
      (implies
        (and (p &quot;clienta&quot; z 9) (p &quot;clienta&quot; &quot;cookie&quot; z cookie)
          (p &quot;clienta&quot; &quot;u&quot; z u) (p &quot;clienta&quot; &quot;s&quot; z s)
          (p &quot;clienta&quot; &quot;spk&quot; z spk) (p &quot;clienta&quot; &quot;ca&quot; z ca)
          (p &quot;clienta&quot; &quot;cr&quot; z cr) (p &quot;clienta&quot; &quot;sr&quot; z sr)
          (p &quot;clienta&quot; &quot;x&quot; z x) (non (privk ca)) (non (invk spk))
          (uniq sr) (uniq-at cr z 0) (ugen-at x z 0))
        (exists ((z0 strd))
          (and (p &quot;servera&quot; z0 9) (p &quot;servera&quot; &quot;cookie&quot; z0 cookie)
            (p &quot;servera&quot; &quot;u&quot; z0 u) (p &quot;servera&quot; &quot;s&quot; z0 s)
            (uniq-at cookie z0 4) (fact neq u s))))))
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))))
  (label 533)
  (unrealized (0 1))
  (origs (pt-0 (0 6)) (cr (0 0)))
  (ugens (x (0 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k570">Item <a href="#t533">570</a>, Parent: <a href="#k533">533</a>.</p>

<div>
 <svg
  class='diagram' width='179.880pt' height='754.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 179.880 754.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='714.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 139.920 714.960 Q 92.940 714.960 45.960 714.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-2 &quot;server store&quot; s u cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-1 any-0))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <path
   d='M 139.920 414.960 Q 92.940 414.960 45.960 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='139.920' cy='264.960' r='6.000'/></g>
  <path
   d='M 139.920 189.960 Q 92.940 189.960 45.960 189.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle style='fill: blue;' cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='714.960' r='6.000'/></g>
  <path
   d='M 39.960 639.960 Q 86.940 639.960 133.920 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt-0 &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt any))</title>
   <circle style='fill: gray;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <path
   d='M 39.960 339.960 Q 86.940 339.960 133.920 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y x)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <path
   d='M 39.960 264.960 Q 86.940 264.960 133.920 264.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='39.960' cy='189.960' r='6.000'/></g>
  <path
   d='M 39.960 114.960 Q 86.940 114.960 133.920 114.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((any any-0) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (authstor authstor) (y y) (x x))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (response response) (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <text x='89.940' y='39.960' style='text-anchor: middle;'>ca 570</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p password) (cr sr random32) (spk akey)
    (u s ca name) (pt pt-0 pt-1 pt-2 pval) (cookiestor authstor locn)
    (y x rndx))
  (defstrand clienta 9 (any any) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (cookiestor cookiestor) (x x) (y y))
  (defstrand servera 9 (any any-0) (cookie cookie) (response response)
    (request request) (p p) (cr cr) (sr sr) (spk spk) (u u) (s s)
    (ca ca) (authstor authstor) (y y) (x x))
  (precedes ((0 0) (1 0)) ((0 2) (1 2)) ((0 3) (1 3)) ((0 7) (1 7))
    ((1 1) (0 1)) ((1 4) (0 4)) ((1 8) (0 8)))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cookie cr sr)
  (uniq-gen y x)
  (absent (y x))
  (facts (neq u s))
  (rule fact-servera-neq0 trRl_clienta-at-5 trRl_clienta-at-6
    trRl_servera-at-5 trRl_servera-at-6)
  (operation encryption-test (displaced 2 0 clienta 8)
    (enc cookie request-0
      (hash &quot;c ap traffic&quot; cr sr
        (hash (exp (gen) (mul x-0 y)) &quot;derived&quot;))) (1 7))
  (strand-map 0 1)
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load cookiestor (cat pt any))
      (stor cookiestor (cat pt-0 &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    ((recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat pt-1 any-0))
      (stor authstor (cat pt-2 &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))))
  (label 570)
  (parent 533)
  (realized)
  (shape)
  (satisfies yes)
  (maps
    ((0)
      ((cookie cookie) (u u) (s s) (ca ca) (cr cr) (sr sr) (spk spk)
        (x x) (y y) (p p) (any any) (cookiestor cookiestor)
        (request request) (response response))))
  (origs (pt-0 (0 6)) (cookie (1 4)) (pt-2 (1 6)) (sr (1 1)) (cr (0 0)))
  (ugens (x (0 0)) (y (1 1))))</pre>

<p id="t596">Tree <a href="#top">596</a>, POV <a href="#k596">596</a>.</p>

<div>
 <svg
  class='diagram' width='129.840pt' height='79.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 129.840 79.920' font-size='12.000'>
  <text
   x='89.880' y='26.040'
   style='font-weight: bold; text-anchor: middle; fill: blue;'
   onclick='window.open(&quot;#k634&quot;, &quot;_self&quot;)'>634</text>
  <line
   x1='39.960' y1='39.960' x2='89.880' y2='39.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <text
   x='39.960' y='26.040' style='text-anchor: middle; fill: black;'
   onclick='window.open(&quot;#k596&quot;, &quot;_self&quot;)'>596</text>
  </svg></div>

<pre>(defprotocol ca basic
  (defrole clienta
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (p password) (cookie data) (any mesg) (cookiestor locn)
      (request httpreq) (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor any)
      (stor cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x))
  (defrole clientr
    (vars (u s ca name) (cr sr random32) (x rndx) (y expt) (spk akey)
      (cookie data) (cookiestor locn) (request httpreq)
      (response httpdata))
    (trace (send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;)))))
    (uniq-gen x)
    (gen-st (cat &quot;client store&quot; u s cookie)))
  (defrole servera
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (p password) (cookie data) (any mesg) (authstor locn)
      (request httpreq) (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor any)
      (stor authstor (cat &quot;server store&quot; s u cookie))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-orig cookie)
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s)))
  (defrole serverr
    (vars (u s ca name) (cr sr random32) (y rndx) (x expt) (spk akey)
      (cookie data) (authstor locn) (request httpreq)
      (response httpdata))
    (trace (recv (cat cr (exp (gen) x)))
      (send
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y x)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul y x)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;))))
      (load authstor (cat &quot;server store&quot; s u cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y x)) &quot;derived&quot;)))))
    (uniq-gen y)
    (absent (y x))
    (facts (neq u s))
    (gen-st (cat &quot;server store&quot; s u cookie)))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-servera-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;servera&quot; z (idx 4)) (p &quot;servera&quot; &quot;u&quot; z u)
          (p &quot;servera&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule fact-serverr-neq0
    (forall ((z strd) (s u name))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;u&quot; z u)
          (p &quot;serverr&quot; &quot;s&quot; z s)) (fact neq u s))))
  (defgenrule trRl_clienta-at-6
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_clienta-at-5
    (forall ((z strd))
      (implies (p &quot;clienta&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule trRl_servera-at-6
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 6)))))
  (defgenrule trRl_servera-at-5
    (forall ((z strd))
      (implies (p &quot;servera&quot; z (idx 7)) (trans z (idx 5)))))
  (defgenrule gen-st-clientr-0
    (forall ((z strd) (u s name) (cookie data))
      (implies
        (and (p &quot;clientr&quot; z (idx 4)) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;s&quot; z s) (p &quot;clientr&quot; &quot;u&quot; z u))
        (gen-st (cat &quot;client store&quot; u s cookie)))))
  (defgenrule gen-st-serverr-0
    (forall ((z strd) (s u name) (cookie data))
      (implies
        (and (p &quot;serverr&quot; z (idx 5)) (p &quot;serverr&quot; &quot;cookie&quot; z cookie)
          (p &quot;serverr&quot; &quot;u&quot; z u) (p &quot;serverr&quot; &quot;s&quot; z s))
        (gen-st (cat &quot;server store&quot; s u cookie)))))
  (lang (random32 atom) (random48 atom) (password atom) (httpreq atom)
    (httpdata atom)))</pre>

<p id="k596">Item <a href="#t596">596</a>, Child: <a href="#k634">634</a>.</p>

<div>
 <svg
  class='diagram' width='79.920pt' height='529.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 79.920 529.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='39.960' y1='114.960' x2='39.960' y2='489.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='414.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: red;' cx='39.960' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x))</title>
   <circle cx='39.960' cy='114.960' r='6.000'/></g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <text x='39.960' y='39.960' style='text-anchor: middle;'>ca 596</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (cookie data) (response httpdata) (request httpreq)
    (cr sr random32) (spk akey) (u s ca name) (pt pval)
    (cookiestor locn) (x rndx) (y expt))
  (defstrand clientr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk) (u u) (s s) (ca ca)
    (cookiestor cookiestor) (x x) (y y))
  (non-orig (invk spk) (privk ca))
  (uniq-orig cr sr)
  (uniq-gen x)
  (goals
    (forall
      ((z strd) (cookie data) (u s ca name) (cr sr random32) (spk akey)
        (x rndx))
      (implies
        (and (p &quot;clientr&quot; z 6) (p &quot;clientr&quot; &quot;cookie&quot; z cookie)
          (p &quot;clientr&quot; &quot;u&quot; z u) (p &quot;clientr&quot; &quot;s&quot; z s)
          (p &quot;clientr&quot; &quot;spk&quot; z spk) (p &quot;clientr&quot; &quot;ca&quot; z ca)
          (p &quot;clientr&quot; &quot;cr&quot; z cr) (p &quot;clientr&quot; &quot;sr&quot; z sr)
          (p &quot;clientr&quot; &quot;x&quot; z x) (non (privk ca)) (non (invk spk))
          (uniq sr) (uniq-at cr z 0) (ugen-at x z 0))
        (exists ((z0 strd))
          (and (p &quot;servera&quot; z0 7) (p &quot;servera&quot; &quot;cookie&quot; z0 cookie)
            (p &quot;servera&quot; &quot;u&quot; z0 u) (p &quot;servera&quot; &quot;s&quot; z0 s)
            (uniq-at cookie z0 4) (fact neq u s))))))
  (traces
    ((send (cat cr (exp (gen) x)))
      (recv
        (cat (cat sr (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s spk
                (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x)) (cat sr (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr (exp (gen) x)) (cat sr (exp (gen) y)) s
                  spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat pt &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))))
  (label 596)
  (unrealized (0 1))
  (origs (cr (0 0)))
  (ugens (x (0 0)))
  (comment &quot;Not closed under rules&quot;))</pre>

<p id="k634">Item <a href="#t596">634</a>, Parent: <a href="#k596">596</a>.</p>

<div>
 <svg
  class='diagram' width='379.800pt' height='829.920pt'
  xmlns='http://www.w3.org/2000/svg' version='1.1'
  viewBox='0 0 379.800 829.920' font-size='12.000'>
  <defs>
   <marker
    id='arrow' orient='auto' markerWidth='5' markerHeight='10' refX='5'
    refY='5'>
    <path
     d='M 0 0 5 5 0 10'
     style='stroke-width: 2; fill: none; stroke: black;'/></marker>
   </defs>
  <line
   x1='339.840' y1='114.960' x2='339.840' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='239.880' y1='339.960' x2='239.880' y2='789.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='139.920' y1='114.960' x2='139.920' y2='564.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <line
   x1='39.960' y1='339.960' x2='39.960' y2='789.960'
   style='stroke-width: 0.960; stroke: gray;'/>
  <path
   d='M 339.840 564.960 Q 291.524 637.464 243.207 709.967'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))</title>
   <circle style='fill: gray;' cx='339.840' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg authstor (cat pt-2 any-0))</title>
   <circle style='fill: gray;' cx='339.840' cy='489.960' r='6.000'/></g>
  <path
   d='M 339.840 414.960 Q 242.880 377.460 145.920 414.960'
   style='stroke-dasharray: 6.000,2.400; stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr-1 sr-1 (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;)))</title>
   <circle cx='339.840' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u-0 p-0 (hash &quot;c ap traffic&quot; cr-1 sr-1 (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='339.840' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)))) (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1))</title>
   <circle style='fill: blue;' cx='339.840' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-1 (exp (gen) y-1)) (enc (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)) (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) (cat s spk-1 (enc (hash s spk-1) (privk ca-1))) (enc (hash (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1)) s spk-1 (enc (hash s spk-1) (privk ca-1))) (invk spk-1))) (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1)))</title>
   <circle cx='339.840' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr-1 (exp (gen) x-1))</title>
   <circle style='fill: blue;' cx='339.840' cy='114.960' r='6.000'/></g>
  <path
   d='M 239.880 789.960 Q 142.920 752.460 45.960 789.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='239.880' cy='789.960' r='6.000'/></g>
  <g>
   <title>(ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))</title>
   <circle style='fill: gray;' cx='239.880' cy='714.960' r='6.000'/></g>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='239.880' cy='639.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle style='fill: blue;' cx='239.880' cy='564.960' r='6.000'/></g>
  <path
   d='M 239.880 414.960 Q 142.920 377.460 45.960 414.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle cx='239.880' cy='414.960' r='6.000'/></g>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle style='fill: blue;' cx='239.880' cy='339.960' r='6.000'/></g>
  <path
   d='M 139.920 564.960 Q 92.940 564.960 45.960 564.960'
   style='stroke-width: 0.960; stroke: blue; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='139.920' cy='564.960' r='6.000'/></g>
  <g><title>(ch-msg cookiestor (cat pt-0 any))</title>
   <circle style='fill: gray;' cx='139.920' cy='489.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login-successful&quot; cookie (hash &quot;s ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='139.920' cy='414.960' r='6.000'/></g>
  <g>
   <title>(enc &quot;login&quot; u p (hash &quot;c ap traffic&quot; cr-0 sr-0 (hash (exp (gen) (mul x y)) &quot;derived&quot;)))</title>
   <circle cx='139.920' cy='339.960' r='6.000'/></g>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)))) (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))</title>
   <circle cx='139.920' cy='264.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr-0 (exp (gen) y)) (enc (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)) (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) (cat s spk (enc (hash s spk) (privk ca))) (enc (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s spk (enc (hash s spk) (privk ca))) (invk spk))) (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0)))</title>
   <circle style='fill: blue;' cx='139.920' cy='189.960' r='6.000'/></g>
  <g><title>(cat cr-0 (exp (gen) x))</title>
   <circle cx='139.920' cy='114.960' r='6.000'/></g>
  <g>
   <title>(enc response (hash &quot;s ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle style='fill: blue;' cx='39.960' cy='789.960' r='6.000'/></g>
  <path
   d='M 39.960 639.960 Q 136.920 602.460 233.880 639.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc cookie request (hash &quot;c ap traffic&quot; cr sr (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))</title>
   <circle cx='39.960' cy='639.960' r='6.000'/></g>
  <g>
   <title>(ch-msg cookiestor (cat pt &quot;client store&quot; u s cookie))</title>
   <circle style='fill: gray;' cx='39.960' cy='564.960' r='6.000'/></g>
  <path
   d='M 39.960 489.960 Q 137.111 488.906 234.262 562.853'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g>
   <title>(enc (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)))) (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))</title>
   <circle cx='39.960' cy='489.960' r='6.000'/></g>
  <g>
   <title>(cat (cat sr (exp (gen) y-0)) (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0)) (hash (hash &quot;finished&quot; (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)) (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) (cat s spk-0 (enc (hash s spk-0) (privk ca-0))) (enc (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))) (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr)))</title>
   <circle style='fill: blue;' cx='39.960' cy='414.960' r='6.000'/></g>
  <path
   d='M 39.960 339.960 Q 136.920 302.460 233.880 339.960'
   style='stroke-width: 0.960; stroke: black; marker-end: url(#arrow); fill: none;'/>
  <g><title>(cat cr (exp (gen) x-0))</title>
   <circle cx='39.960' cy='339.960' r='6.000'/></g>
  <g>
   <title>((any any-0) (cookie cookie) (p p-0) (cr cr-1) (sr sr-1) (spk spk-1) (u u-0) (s s) (ca ca-1) (authstor authstor) (y y-1) (x x-1))</title>
   <text
    x='339.840' y='77.460' style='text-anchor: middle;'>servera</text>
   </g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk-0) (u u-0) (s s) (ca ca-0) (authstor authstor) (y y-0) (x x-0))</title>
   <text
    x='239.880' y='77.460' style='text-anchor: middle;'>serverr</text>
   </g>
  <g>
   <title>((any any) (cookie cookie) (p p) (cr cr-0) (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor) (x x) (y y))</title>
   <text
    x='139.920' y='77.460' style='text-anchor: middle;'>clienta</text>
   </g>
  <g>
   <title>((cookie cookie) (response response) (request request) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0) (cookiestor cookiestor) (x x-0) (y y-0))</title>
   <text
    x='39.960' y='77.460' style='text-anchor: middle;'>clientr</text>
   </g>
  <text
   x='189.900' y='39.960' style='text-anchor: middle;'>ca 634</text>
  </svg></div>

<pre>(defskeleton ca
  (vars (any any-0 mesg) (cookie data) (response httpdata)
    (request httpreq) (p p-0 password)
    (cr sr cr-0 sr-0 cr-1 sr-1 random32) (spk spk-0 spk-1 akey)
    (u ca u-0 s ca-0 ca-1 name) (pt pt-0 pt-1 pt-2 pval)
    (cookiestor authstor locn) (x rndx) (y expt) (y-0 x-0 y-1 rndx)
    (x-1 expt))
  (defstrand clientr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk-0) (u u) (s s) (ca ca-0)
    (cookiestor cookiestor) (x x-0) (y y-0))
  (defstrand clienta 7 (any any) (cookie cookie) (p p) (cr cr-0)
    (sr sr-0) (spk spk) (u u) (s s) (ca ca) (cookiestor cookiestor)
    (x x) (y y))
  (defstrand serverr 6 (cookie cookie) (response response)
    (request request) (cr cr) (sr sr) (spk spk-0) (u u-0) (s s)
    (ca ca-0) (authstor authstor) (y y-0) (x x-0))
  (defstrand servera 7 (any any-0) (cookie cookie) (p p-0) (cr cr-1)
    (sr sr-1) (spk spk-1) (u u-0) (s s) (ca ca-1) (authstor authstor)
    (y y-1) (x x-1))
  (precedes ((0 0) (2 0)) ((0 2) (2 2)) ((0 4) (2 3)) ((1 6) (0 3))
    ((2 1) (0 1)) ((2 5) (0 5)) ((3 4) (1 4)) ((3 6) (2 4)))
  (non-orig (invk spk-0) (privk ca-0))
  (uniq-orig cookie cr sr)
  (uniq-gen x y-0 x-0 y-1)
  (absent (y-0 x-0) (y-1 x-1))
  (gen-st (cat &quot;client store&quot; u s cookie)
    (cat &quot;server store&quot; s u-0 cookie))
  (facts (neq u-0 s))
  (leads-to ((1 6) (0 3)) ((3 6) (2 4)))
  (rule fact-serverr-neq0 trRl_clienta-at-5 trRl_clienta-at-6
    trRl_servera-at-5 trRl_servera-at-6)
  (operation channel-test (added-strand servera 7)
    (ch-msg authstor (cat pt-1 &quot;server store&quot; s u-0 cookie)) (2 4))
  (strand-map 0 1 2)
  (traces
    ((send (cat cr (exp (gen) x-0)))
      (recv
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (load cookiestor (cat pt &quot;client store&quot; u s cookie))
      (send
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (recv
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))))
    ((send (cat cr-0 (exp (gen) x)))
      (recv
        (cat (cat sr-0 (exp (gen) y))
          (enc (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk)))
            (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))))
      (send
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0))
            (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
            (cat s spk (enc (hash s spk) (privk ca)))
            (enc
              (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y)) s
                spk (enc (hash s spk) (privk ca))) (invk spk))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul x y)) &quot;s hs traffic&quot; cr-0 sr-0))
              (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
              (cat s spk (enc (hash s spk) (privk ca)))
              (enc
                (hash (cat cr-0 (exp (gen) x)) (cat sr-0 (exp (gen) y))
                  s spk (enc (hash s spk) (privk ca))) (invk spk))))
          (hash (exp (gen) (mul x y)) &quot;c hs traffic&quot; cr-0 sr-0)))
      (send
        (enc &quot;login&quot; u p
          (hash &quot;c ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (recv
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr-0 sr-0
            (hash (exp (gen) (mul x y)) &quot;derived&quot;))))
      (load cookiestor (cat pt-0 any))
      (stor cookiestor (cat pt &quot;client store&quot; u s cookie)))
    ((recv (cat cr (exp (gen) x-0)))
      (send
        (cat (cat sr (exp (gen) y-0))
          (enc (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0)))
            (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr))
            (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
            (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
            (enc
              (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0)) s
                spk-0 (enc (hash s spk-0) (privk ca-0))) (invk spk-0))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-0 x-0)) &quot;s hs traffic&quot; cr sr))
              (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
              (cat s spk-0 (enc (hash s spk-0) (privk ca-0)))
              (enc
                (hash (cat cr (exp (gen) x-0)) (cat sr (exp (gen) y-0))
                  s spk-0 (enc (hash s spk-0) (privk ca-0)))
                (invk spk-0))))
          (hash (exp (gen) (mul y-0 x-0)) &quot;c hs traffic&quot; cr sr)))
      (recv
        (enc cookie request
          (hash &quot;c ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;))))
      (load authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))
      (send
        (enc response
          (hash &quot;s ap traffic&quot; cr sr
            (hash (exp (gen) (mul y-0 x-0)) &quot;derived&quot;)))))
    ((recv (cat cr-1 (exp (gen) x-1)))
      (send
        (cat (cat sr-1 (exp (gen) y-1))
          (enc (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
            (enc
              (hash (cat cr-1 (exp (gen) x-1))
                (cat sr-1 (exp (gen) y-1)) s spk-1
                (enc (hash s spk-1) (privk ca-1))) (invk spk-1))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1
                  sr-1)) (cat cr-1 (exp (gen) x-1))
              (cat sr-1 (exp (gen) y-1))
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc
                (hash (cat cr-1 (exp (gen) x-1))
                  (cat sr-1 (exp (gen) y-1)) s spk-1
                  (enc (hash s spk-1) (privk ca-1))) (invk spk-1)))
            (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1 sr-1))))
      (recv
        (enc
          (hash
            (hash &quot;finished&quot;
              (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1))
            (cat cr-1 (exp (gen) x-1)) (cat sr-1 (exp (gen) y-1))
            (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
            (enc
              (hash (cat cr-1 (exp (gen) x-1))
                (cat sr-1 (exp (gen) y-1)) s spk-1
                (enc (hash s spk-1) (privk ca-1))) (invk spk-1))
            (hash
              (hash &quot;finished&quot;
                (hash (exp (gen) (mul y-1 x-1)) &quot;s hs traffic&quot; cr-1
                  sr-1)) (cat cr-1 (exp (gen) x-1))
              (cat sr-1 (exp (gen) y-1))
              (cat s spk-1 (enc (hash s spk-1) (privk ca-1)))
              (enc
                (hash (cat cr-1 (exp (gen) x-1))
                  (cat sr-1 (exp (gen) y-1)) s spk-1
                  (enc (hash s spk-1) (privk ca-1))) (invk spk-1))))
          (hash (exp (gen) (mul y-1 x-1)) &quot;c hs traffic&quot; cr-1 sr-1)))
      (recv
        (enc &quot;login&quot; u-0 p-0
          (hash &quot;c ap traffic&quot; cr-1 sr-1
            (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;))))
      (send
        (enc &quot;login-successful&quot; cookie
          (hash &quot;s ap traffic&quot; cr-1 sr-1
            (hash (exp (gen) (mul y-1 x-1)) &quot;derived&quot;))))
      (load authstor (cat pt-2 any-0))
      (stor authstor (cat pt-1 &quot;server store&quot; s u-0 cookie))))
  (label 634)
  (parent 596)
  (realized)
  (shape)
  (satisfies
    (no (p &quot;servera&quot; &quot;u&quot; z0 u) (z 0) (cookie cookie) (u u) (s s)
      (ca ca-0) (cr cr) (sr sr) (spk spk-0) (x x-0)))
  (maps
    ((0)
      ((cookie cookie) (u u) (s s) (ca ca-0) (cr cr) (sr sr) (spk spk-0)
        (x x-0) (y y-0) (cookiestor cookiestor) (request request)
        (response response))))
  (origs (cookie (3 4)) (pt-1 (3 6)) (pt (1 6)) (sr (2 1)) (cr (0 0)))
  (ugens (y-1 (3 1)) (x-0 (0 0)) (y-0 (2 1)) (x (1 0))))</pre>

</body>
</html>
